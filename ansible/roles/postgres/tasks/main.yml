- name: PostgreSQL repo key is available
  apt_key:
    url: https://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc
    state: present

- name: PostgreSQL repository is present
  apt_repository:
    repo: 'deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main'
    state: present
    filename: pgdg
    update_cache: true

- name: PostgreSQL is installed
  apt:
    name:
      - "postgresql-{{ db.version }}"
      - "postgresql-contrib-{{ db.version }}"
      - libpq-dev
      - python3-psycopg2
    state: present
  tags: packages

- name: PostgreSQL is running
  service:
    name: postgresql
    state: started
    enabled: yes

- name: Database exists
  postgresql_db:
    name: "{{ db.name }}"
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
    state: present
  become_user: postgres

- name: User has access to the database
  postgresql_user:
    db: "{{ db.name }}"
    name: "{{ db.user }}"
    password: "{{ db.password }}"
    priv: ALL
    state: present
  become_user: postgres

- name: User does not have unnecessary privileges
  postgresql_user:
    name: "{{ db.user }}"
    role_attr_flags: NOSUPERUSER,NOCREATEDB
    state: present
  become_user: postgres

- name: Allow authenticated connections from 10.0.0.0
  lineinfile:
    path: "/etc/postgresql/{{ db.version }}/{{ db.cluster_name }}/pg_hba.conf"
    regexp: '^host all all 10.0.0.0'
    line: "host all all 10.0.0.0/8 md5"
  notify:
    - PostgreSQL Restarted
  become_user: postgres

- name: Listen on all interfaces
  lineinfile:
    path: "/etc/postgresql/{{ db.version }}/{{ db.cluster_name }}/postgresql.conf"
    regexp: '^listen_addresses'
    line: "listen_addresses = '*'"
  notify:
    - PostgreSQL Restarted
  become_user: postgres
